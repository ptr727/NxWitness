name: Test Pull Request Changes

on:
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  unittests:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:

      # https://github.com/marketplace/actions/setup-net-core-sdk
      - name: Setup .NET SDK 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x

      # https://github.com/marketplace/actions/checkout
      - name: Checkout code
        uses: actions/checkout@v4

      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
      - name: Run unit tests
        run: dotnet test .

  setmatrix:
    name: Set Matrix
    needs: unittests
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setmatrix.outputs.matrix }}

    steps:

      # https://github.com/marketplace/actions/checkout
      - name: Checkout code
        uses: actions/checkout@v4

      # Load Matrix.json from file
      - name: Load Matrix JSON
        id: setmatrix
        run: |
          # Load JSON from file
          JSON=$(cat ./Make/Matrix.json)
          echo "JSON:"
          echo "$JSON"
          # Convert the JSON to a single flat line to avoid having to escape the multiline output
          echo "Flat JSON:"
          FJSON=$(echo "$JSON" | jq --compact-output)
          echo "$FJSON"
          echo "matrix=${FJSON}" >> $GITHUB_OUTPUT

  # Build docker images
  builddocker:
    needs: setmatrix
    name: Build Docker Images
    runs-on: ubuntu-latest

    strategy:
      # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
      max-parallel: 4
      matrix:
        images: ${{ fromJson(needs.setmatrix.outputs.matrix).images }}

    steps:
      # https://github.com/marketplace/actions/checkout
      - name: Checkout Code
        uses: actions/checkout@v4

      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      # https://github.com/marketplace/actions/docker-login
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build Images
        uses: docker/build-push-action@v6
        with:
          push: false
          cache-from: type=gha,scope=${{ matrix.images.cachescope }}
          cache-to: type=gha,mode=max,scope=${{ matrix.images.cachescope }}
          context: Docker
          file: Docker/${{ matrix.images.name }}.Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |-
            ${{ join(matrix.images.tags, '
            ') }}
          build-args: |-
            ${{ join(matrix.images.args, '
            ') }}
            LABEL_VERSION=1.0.0.1
